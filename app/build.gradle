plugins {
    id 'application'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        url = uri("https://maven.pkg.github.com/lehadnk/spring-adminlte")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'com.github.lehadnk:adminlte:1.1.2'

    testImplementation 'junit:junit:4.13.2'

    runtimeOnly 'org.postgresql:postgresql:42.5.4'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.1'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/java',
            ]
            exclude '**/*.java'
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    mainClass = 't6proj.App'
}
